app dishes {
  wasp: {
    version: "^0.11.5"
  },
  title: "dishes",
  dependencies: [
    ("@tailwindcss/forms", "^0.5.3"),
    ("@tailwindcss/typography", "^0.5.7"),
    ("@headlessui/react", "^1.7.17"),
    ("@heroicons/react", "^2.0.18")
  ],
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login"
  }
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: true,
  component: import Main from "@client/MainPage.jsx"
}

entity User {=psl
  id        Int     @id @default(autoincrement())
  username  String  @unique
  firstname String  @default("")
  lastname  String  @default("")
  password  String
  tasks     Task[]
psl=}

entity Task {=psl
  id          Int     @id @default(autoincrement())
  description String  
  explanation String  @default("")
  isDone      Boolean @default(false)
  user        User?   @relation(fields: [userId], references: [id])
  userId      Int?
psl=}

query getTasks {
  fn: import { getTasks } from "@server/queries.js",
  entities: [Task]
}

action createTask {
  fn: import { createTask } from "@server/actions.js",
  entities: [Task]
}

action updateTask {
  fn: import { updateTask } from "@server/actions.js",
  entities: [Task]
}

action deleteTask {
  fn: import { deleteTask } from "@server/actions.js",
  entities: [Task]
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/SignupPage.jsx"
}

route LoginPage { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/LoginPage.jsx"
}
